{"version":3,"sources":["..\\src\\script_point_view.js"],"names":["define","$","ajax","notification","$get","moduleId","selector","$element","find","Reactions","none","easy","better","hard","reactionVotedArray","setUpReactions","courseId","modulesWithReactions","reactionsHtml","pixSrc","forEach","module","parseInt","cmid","uservote","length","after","prepend","reactionsLock","click","reactionName","reactionSelect","previousReaction","newVote","call","methodname","args","func","courseid","vote","done","previousReactionName","updateReactionNb","fail","exception","reactionChange","this","data","always","updateGroupImgAndNb","each","reactionNb","reactionImageSizeForRatio","ratio","top","left","height","groupImageSizeForRatio","reactionsVisible","groupTimeout","reactionsTimeout","triggerHideReactions","reaction","index","delay","css","pointer-events","animate","queue","next","addClass","show","removeClass","opacity","transition","hideReactions","triggerShowReactions","hide","showReactions","clearTimeout","setTimeout","mouseover","stop","mouseout","setupReactionsAnimation","pix","groupImg","totalNb","text","toUpperCase","charAt","attr","$groupNbWrapper","$groupNb","M","util","get_string","toggleClass","digits","Math","min","right","max","transform","diff","isSelected","$reactionNb","nbReaction","init","blockData","difficultyLevels","trackColors","difficultylevels","trackcolors","difficultyLevel","title","track","$track","class","style","$container","id","first","moduleswithreactions","reactionstemplate","document","ajaxComplete","event","xhr","settings","JSON","parse"],"mappings":"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","file":"script_point_view.min.js","sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module to display and manage reactions and difficulty tracks on course page.\n * @copyright  2020 Quentin Fombaron, 2021 Astor Bizard\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/ajax', 'core/notification'], function($, ajax, notification) {\n\n    /**\n     * Call a function each time a course section is loaded.\n     * @param {Function} call Function to call.\n     */\n    function callOnModulesListLoad(call) {\n        call();\n\n        // The following listener is needed for the Tiles course format, where sections are loaded on demand.\n        $(document).ajaxComplete(function(event, xhr, settings) {\n            if (typeof (settings.data) !== 'undefined') {\n                var data = JSON.parse(settings.data);\n                if (data.length > 0 && typeof (data[0].methodname) !== 'undefined') {\n                    if (data[0].methodname == 'format_tiles_get_single_section_page_html' // Tile load.\n                        || data[0].methodname == 'format_tiles_log_tile_click') { // Tile load, cached.\n                        call();\n                    }\n                }\n            }\n        });\n    }\n\n    /**\n     * Set up difficulty tracks on course modules.\n     * @param {Array} difficultyLevels Array of difficulty tracks, one entry for each course module.\n     * @param {Array} trackColors Tracks colors, from block plugin configuration.\n     */\n    function setUpDifficultyTracks(difficultyLevels, trackColors) {\n        difficultyLevels.forEach(function(module) {\n            var difficultyLevel = parseInt(module.difficultyLevel);\n            var title = '';\n            if (difficultyLevel > 0) {\n                var track = ['greentrack', 'bluetrack', 'redtrack', 'blacktrack'][difficultyLevel - 1];\n                title = M.util.get_string(track, 'block_point_view');\n            }\n            var $track = $('<div>', {\n                'class': 'block_point_view track',\n                'title': title,\n                'style': 'background-color: ' + trackColors[difficultyLevel] + ';'\n            });\n            // Decide where to put the track (mod-indent-outer: Moodle <=3.11, activitytitle: Moodle 4.0+).\n            var $container = $('#module-' + module.id + ' .mod-indent-outer, #module-' + module.id + ' .activitytitle').first();\n\n            // Add the track.\n            if ($container.find('.block_point_view.track').length === 0) {\n                $container.prepend($track);\n            }\n            // If there is indentation, move the track after it.\n            $container.find('.mod-indent').after($track);\n\n        });\n    }\n\n\n    /**\n     * Get a jQuery object in reaction zone for given module ID.\n     * @param {Number} moduleId Module ID.\n     * @param {String} selector (optional) Sub-selector.\n     * @return {jQuery} If selector was provided, the corresponding jQuery object within the reaction zone.\n     *  If not, the reaction zone jQuery object.\n     */\n    function $get(moduleId, selector) {\n        var $element = $('#module-' + moduleId + ' .block_point_view.reactions-container');\n        if (typeof (selector) === 'undefined') {\n            return $element;\n        } else {\n            return $element.find(selector);\n        }\n    }\n\n    // Enumeration of the possible reactions.\n    var Reactions = {\n            none: 0,\n            easy: 1,\n            better: 2,\n            hard: 3\n    };\n\n    // Array of Reaction of the user for the activity.\n    var reactionVotedArray = {};\n\n    /**\n     * Set up difficulty tracks on course modules.\n     * @param {Number} courseId Course ID.\n     * @param {Array} modulesWithReactions Array of reactions state, one entry for each course module with reactions enabled.\n     * @param {String} reactionsHtml HTML fragment for reactions.\n     * @param {Array} pixSrc Array of pictures sources for group images.\n     */\n    function setUpReactions(courseId, modulesWithReactions, reactionsHtml, pixSrc) {\n        // For each selected module, create a reaction zone.\n        modulesWithReactions.forEach(function(module) {\n            var moduleId = parseInt(module.cmid);\n            var uservote = parseInt(module.uservote);\n\n            // Initialise reactionVotedArray.\n            reactionVotedArray[moduleId] = uservote;\n\n            if ($('#module-' + moduleId).length === 1 && $get(moduleId).length === 0) {\n\n                // Add the reaction zone to the module.\n                if ($('#module-' + moduleId + ' .activity-instance').length) {\n                    // Moodle 4.0+.\n                    $('#module-' + moduleId + ' .activity-instance').after(reactionsHtml);\n                } else {\n                    // Moodle <=3.11.\n                    $('#module-' + moduleId).prepend(reactionsHtml);\n                }\n\n                // Setup reaction change.\n                var reactionsLock = false;\n                $get(moduleId, '.reaction img')\n                .click(function() {\n                    // Use a mutex to avoid query / display inconsistencies.\n                    // This is not a perfect mutex, but is actually enough for our needs.\n                    if (reactionsLock === false) {\n                        reactionsLock = true;\n                        reactionChange(courseId, moduleId, $(this).data('reactionname'))\n                        .always(function() {\n                            reactionsLock = false;\n                            updateGroupImgAndNb(moduleId, pixSrc);\n                        });\n                    }\n                });\n\n                // Initialize reactions state.\n                $get(moduleId, '.reactionnb').each(function() {\n                    var reactionName = $(this).data('reactionname');\n                    var reactionNb = parseInt(module['total' + reactionName]);\n                    updateReactionNb(moduleId, reactionName, reactionNb, uservote === Reactions[reactionName]);\n                });\n                updateGroupImgAndNb(moduleId, pixSrc);\n\n                // Setup animations.\n                setupReactionsAnimation(moduleId, pixSrc);\n            }\n        });\n    }\n\n    /**\n     * Manage a reaction change (user added, removed or updated their vote).\n     * @param {Number} courseId Course ID.\n     * @param {Number} moduleId Module ID.\n     * @param {String} reactionName The reaction being clicked.\n     * @returns {Promise} A promise, result of the change operations (ajax call and UI update).\n     */\n    function reactionChange(courseId, moduleId, reactionName) {\n\n        var reactionSelect = Reactions[reactionName];\n        var previousReaction = reactionVotedArray[moduleId];\n\n        // If the reaction being clicked is the current one, it is a vote remove.\n        var newVote = (reactionSelect === previousReaction) ? Reactions.none : reactionSelect;\n\n        return ajax.call([\n            {\n                methodname: 'block_point_view_update_db',\n                args: {\n                    func: 'update',\n                    courseid: courseId,\n                    cmid: moduleId,\n                    vote: newVote\n                }\n            }\n        ])[0]\n        .done(function() {\n            reactionVotedArray[moduleId] = newVote; // Set current reaction.\n            if (previousReaction !== Reactions.none) {\n                // User canceled their vote (or updated to another one).\n                var previousReactionName = ['', 'easy', 'better', 'hard'][previousReaction];\n                updateReactionNb(moduleId, previousReactionName, -1, false);\n            }\n            if (newVote !== Reactions.none) {\n                // User added or updated their vote.\n                updateReactionNb(moduleId, reactionName, +1, true); // Add new vote.\n            }\n        })\n        .fail(notification.exception);\n    }\n\n    /**\n     * Update the reactions group image and total number according to current votes.\n     * @param {Number} moduleId Module ID.\n     * @param {Array} pix Array of pictures sources for group images.\n     */\n    function updateGroupImgAndNb(moduleId, pix) {\n        // Build group image name.\n        var groupImg = 'group_';\n        var totalNb = 0;\n        $get(moduleId, '.reactionnb').each(function() {\n            var reactionNb = parseInt($(this).text());\n            if (reactionNb > 0) {\n                groupImg += $(this).data('reactionname').toUpperCase().charAt(0); // Add E, B or H.\n            }\n            totalNb += reactionNb;\n        });\n        // Modify the image source of the reaction group.\n        $get(moduleId, '.group_img').attr('src', pix[groupImg]);\n\n        // Update the total number of votes.\n        var $groupNbWrapper = $get(moduleId, '.group_nb');\n        var $groupNb = $groupNbWrapper.find('span');\n\n        $groupNb\n        .text(totalNb)\n        .attr('title', M.util.get_string('totalreactions', 'block_point_view', totalNb));\n\n        $groupNbWrapper\n        .toggleClass('invisible', totalNb === 0)\n        .toggleClass('voted', reactionVotedArray[moduleId] !== Reactions.none);\n\n        // Adjust the size to fit within a fixed space (useful for the green dot).\n        var digits = Math.min(('' + totalNb).length, 5);\n        $groupNb.css({\n            'right': Math.max(0.25 * (digits - 2), 0) + 'em',\n            'transform': 'scaleX(' + (1.0 + 0.03 * digits * digits - 0.35 * digits + 0.34) + ')'\n        });\n    }\n\n    /**\n     * Update a reaction number of votes.\n     * @param {Number} moduleId Module ID.\n     * @param {String} reactionName The reaction to update the number of.\n     * @param {Number} diff Difference to apply (e.g. +1 for adding a vote, -1 for removing a vote).\n     * @param {Boolean} isSelected Whether the reaction we are updating is the one now selected by user.\n     */\n    function updateReactionNb(moduleId, reactionName, diff, isSelected) {\n        var $reactionNb = $get(moduleId, '.reactionnb[data-reactionname=\"' + reactionName + '\"]');\n        var nbReaction = parseInt($reactionNb.text()) + diff;\n        $reactionNb\n        .text(nbReaction)\n        .toggleClass('nbselected', isSelected);\n\n        $get(moduleId, '.reaction img[data-reactionname=\"' + reactionName + '\"]')\n        .toggleClass('novote', nbReaction === 0);\n    }\n\n    /**\n     * Set up animations to swap between reactions preview and vote interface.\n     * @param {Number} moduleId Module ID.\n     */\n    function setupReactionsAnimation(moduleId) {\n\n        // Helpers to resize images for animations.\n        var reactionImageSizeForRatio = function(ratio) {\n            return {\n                top: 15 - (10 * ratio),\n                left: 10 - (10 * ratio),\n                height: 20 * ratio\n            };\n        };\n        var groupImageSizeForRatio = function(ratio) {\n            return {\n                left: -10 + (10 * ratio),\n                height: 20 * ratio\n            };\n        };\n\n        // Animation sequence to hide reactions preview and show vote interface.\n        var showReactions = function(moduleId) {\n            $get(moduleId, '.reactions').removeClass('invisible');\n\n            $get(moduleId, '.group_img')\n            .css({'pointer-events': 'none'})\n            .animate(groupImageSizeForRatio(0), 300)\n            .hide(0);\n\n            $get(moduleId, '.group_nb').delay(200).hide(300);\n\n            // Several selectors for Moodle <=3.11 and 4.0+ compatibility.\n            $('#module-' + moduleId + ' .actions,' +\n              '#module-' + moduleId + ' .activity-info button[data-action=\"toggle-manual-completion\"],' +\n              '#module-' + moduleId + ' .activity-info .automatic-completion-conditions > span.badge:first-of-type').delay(200).queue(function(next) {\n                // Use opacity transition for a smooth hiding.\n                $(this).css({\n                    opacity: 0,\n                    transition : 'opacity 0.3s ease-in-out'\n                });\n                next();\n            }).delay(300).queue(function(next) {\n                // Actually make the element invisible to avoid accidental clicking on transparent element.\n                $(this).addClass('invisible');\n                next();\n            });\n\n            ['easy', 'better', 'hard'].forEach(function(reaction, index) {\n                var delay = 50 + 150 * index; // Easy: 50, better: 200, hard: 350.\n\n                $get(moduleId, '.reaction img[data-reactionname=\"' + reaction + '\"]')\n                .delay(delay).animate(reactionImageSizeForRatio(1), 300)\n                .css({'pointer-events': 'auto'});\n\n                $get(moduleId, '.reactionnb[data-reactionname=\"' + reaction + '\"]')\n                .delay(delay + 300)\n                .queue(function(next) {\n                    $(this).removeClass('invisible');\n                    next();\n                });\n            });\n        };\n\n        // Animation sequence to hide vote interface and show reaction preview.\n        var hideReactions = function(moduleId) {\n            ['hard', 'better', 'easy'].forEach(function(reaction, index) {\n                var delay = 50 + 250 * index; // Hard: 50, better: 300, easy: 550.\n                $get(moduleId, '.reaction img[data-reactionname=\"' + reaction + '\"]')\n                .css({'pointer-events': 'none'})\n                .delay(delay).animate(reactionImageSizeForRatio(0), 500);\n\n                $get(moduleId, '.reactionnb[data-reactionname=\"' + reaction + '\"]')\n                .delay(delay)\n                .queue(function(next) {\n                    $(this).addClass('invisible');\n                    next();\n                });\n            });\n\n            // Show the reaction group image with nice animation.\n            $get(moduleId, '.group_img')\n            .delay(500)\n            .show(0)\n            .animate(groupImageSizeForRatio(1), 300)\n            .queue(function(next) {\n                $get(moduleId, '.reactions').addClass('invisible');\n                next();\n            })\n            .css({'pointer-events': 'auto'});\n\n            $get(moduleId, '.group_nb').delay(600).show(0);\n\n            // Several selectors for Moodle <=3.11 and 4.0+ compatibility.\n            $('#module-' + moduleId + ' .actions,' +\n              '#module-' + moduleId + ' .activity-info button[data-action=\"toggle-manual-completion\"],' +\n              '#module-' + moduleId + ' .activity-info .automatic-completion-conditions > span.badge:first-of-type').delay(600).queue(function(next) {\n                $(this).removeClass('invisible');\n                // Use opacity transition for a smooth showing back.\n                $(this).css({\n                    opacity: 1,\n                    transition : 'opacity 0.3s ease-in-out'\n                });\n                next();\n            });\n        };\n\n        // Setup some timeouts and locks to trigger animations.\n        var reactionsVisible = false;\n        var groupTimeout = null;\n        var reactionsTimeout = null;\n\n        var triggerHideReactions = function() {\n            reactionsTimeout = null;\n            reactionsVisible = false;\n            hideReactions(moduleId);\n        };\n\n        var triggerShowReactions = function() {\n            groupTimeout = null;\n            reactionsVisible = true;\n            showReactions(moduleId);\n            clearTimeout(reactionsTimeout);\n            reactionsTimeout = setTimeout(triggerHideReactions, 2000); // Hide reactions after 2 seconds if mouse is already out.\n        };\n\n        // Reactions preview interactions.\n        $get(moduleId, '.group_img')\n        .mouseover(function() {\n            $(this).stop().animate(groupImageSizeForRatio(1.15), 100); // Widen image a little on hover.\n            groupTimeout = setTimeout(triggerShowReactions, 300); // Show vote interface after 0.3s hover.\n        })\n        .mouseout(function() {\n            if (!reactionsVisible) {\n                // Cancel mouseover actions.\n                clearTimeout(groupTimeout);\n                $(this).stop().animate(groupImageSizeForRatio(1), 100);\n            }\n        })\n        .click(triggerShowReactions); // Show vote interface instantly on click.\n\n        // Reactions images interactions.\n        $get(moduleId, '.reaction img')\n        .mouseover(function() {\n            $(this).stop().animate(reactionImageSizeForRatio(2), 100); // Widen image a little on hover.\n        })\n        .mouseout(function() {\n            $(this).stop().animate(reactionImageSizeForRatio(1), 100);\n        });\n\n        // Vote interface zone interactions\n        $get(moduleId, '.reactions')\n        .mouseout(function() {\n            clearTimeout(reactionsTimeout);\n            reactionsTimeout = setTimeout(triggerHideReactions, 1000); // Hide vote interface after 1s out of it.\n        })\n        .mouseover(function() {\n            clearTimeout(reactionsTimeout);\n        });\n    }\n\n    return {\n        init: function(courseId) {\n\n            // Wait that the DOM is fully loaded.\n            $(function() {\n\n                var blockData = $('.block_point_view[data-blockdata]').data('blockdata');\n\n                callOnModulesListLoad(function() {\n                    setUpDifficultyTracks(blockData.difficultylevels, blockData.trackcolors);\n                    setUpReactions(courseId, blockData.moduleswithreactions, blockData.reactionstemplate, blockData.pix);\n                });\n\n            });\n        }\n    };\n});"]}